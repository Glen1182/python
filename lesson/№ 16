Алгоритм вычисления значения функции F(n), где n  — целое неотрицательное число, задан следующими соотношениями:

F(n)  =  0, при n ≤ 1;

F(n)  =  F(n − 1) + 3n2, если n > 1 и при этом нечётно;

F(n)  =  n / 2 + F(n − 1) + 2, если n > 1 и при этом чётно.
Чему равно значение функции F(49)? В ответе запишите только целое число.
-----------------
def F(n):
    if n <= 1:
      return 0
    if n > 1 and n % 2 != 0:
        return F(n - 1) + 3 * n ** 2
    if n > 1 and n % 2 == 0:
        return n/2 + F(n-1) + 2
print(F(49))
----------------
Алгоритм вычисления значения функции F(n), где n  — целое неотрицательное число, задан следующими соотношениями:

F(0)  =  0;

F(n)  =  F(n / 2), если n > 0 и при этом чётно;

F(n)  =  1 + F(n − 1), если n нечётно.
Сколько существует таких чисел n, что 1 ≤ n ≤ 1000 и F(n)  =  3?
-----------------
def F(n):
    if n == 0:
        return 0
    if n > 0 and n % 2 == 0:
        return F(n / 2)
    if n % 2 != 0:
        return 1 + F(n -1)

k = 0
for n in range (1, 1001):
    if F(n) == 3:
        k += 1
print(k)
----------------
Функция F(n) определена следующим образом:

F(n)=1 при n=1
F(n)=n+F(n−1) при n>1
Чему равно значение выражения F(3000) - F(2000)?
-----------------
1. способ
import sys
sys.setrecursionlimit(10000) # если тяжело питону вычислять

def F(n):
    if n == 1:
        return 1
    if n > 1:
        return n + F(n - 1)

print(F(3000) - F(2000))

2. способ # чтобы не лезть в библиотеки
def F(n):
    if n == 1:
        return 1
    result = 1
    for i in range(2, n + 1):
        result += i
    return result

print(F(2000))
-------------------
