ИЗ СБОРНИКА ПО ИФНЕ
------------------
s = '1' * 2026
while '11111' in s or '222' in s:
    if '11111' in s:
        s = s.replace ('11111', '22')
    else:
        s = s.replace ('222', '2')
    print(s)
------------------
Исполнитель Редактор получает на вход строку цифр и преобразовывает её. На выполнение Редактору дана следующая программа:

ПОКА нашлось(7777) ИЛИ нашлось(1111)

    ЕСЛИ нашлось(7777)

        ТО заменить(7777,1)

        ИНАЧЕ заменить(1111,7)

    КОНЕЦ ЕСЛИ

КОНЕЦ ПОКА

На вход программе подана строка из 512 подряд идущих символов 7. Сколько замен произойдет в ходе работы алгоритма?
-------------------
s = '7' * 512
count = 0

while '7777' in s or '1111' in s:
    if '7777' in s:
        s = s.replace('7777', '1', 1)
        count += 1
    else:
        s = s.replace('1111', '7', 1)
        count += 1

print(s)
print("Количество замен:", count)
------------------
Сколько нулей будет в преобразованной строке после выполнения следующего алгоритма для строки, состоящей из 1 и идущих за ней 33 нулей?

НАЧАЛО

    ПОКА нашлось(1) или нашлось(100)

        ЕСЛИ нашлось(100)

        ТО заменить(100, 0001)

    ИНАЧЕ заменить(1, 00)

КОНЕЦ ЕСЛИ

КОНЕЦ ПОКА

КОНЕЦ
---------------
s = '1' + '0' * 33
count = 0
while '1' in s or '100' in s:
    if '100' in s:
        s = s.replace('100', '0001', )
    else:
        s = s.replace('1', '00', )
print(s)
print(count)
---------------
12 в КИМ

Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.

А) заменить (v, w).

Эта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды заменить (111, 27) преобразует строку 05111150 в строку 0527150. Если в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.

Б) нашлось (v).

Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка исполнителя при этом не изменяется.

Какая строка получится в результате применения приведённой ниже программы к строке, состоящей из 82 идущих подряд цифр 8? В ответе запишите полученную строку.

НАЧАЛО

ПОКА нашлось (1111) ИЛИ нашлось (8888)

ЕСЛИ нашлось (1111)

ТО заменить (1111, 8)

ИНАЧЕ заменить (8888, 11)

КОНЕЦ ЕСЛИ

КОНЕЦ ПОКА

КОНЕЦ
--------------
s = '8' * 82
while '1111' in s or '8888' in s:
    if '1111' in s:
        s = s.replace('1111', '8', 1 )
    else:
        s = s.replace('8888', '11', 1 )

print(s)
-------------
Тип 12 № 9265
------------
s = '8' * 68
while '222' in s or '888' in s:
    if '222' in s:
        s = s.replace ('222', '8', 1)
    else:
        s = s.replace ('888', '2', 1)

print(s)
-----------
Тип 12 №9764
-----------
s = '9' * 127
while '333' in s or '999' in s:
    if '333' in s:
        s = s.replace ('333', '9', 1)
    else:
        s = s.replace ('999', '3', 1)

print(s)
-----------
Тип 12 №9764
-----------
s = '9' * 127
while '333' in s or '999' in s:
    if '333' in s:
        s = s.replace ('333', '9', 1)
    else:
        s = s.replace ('999', '3', 1)

print(s)
----------
Тип 12 №10290
----------
s = '1' + '8' * 80
while '18' in s or '288' in s or '3888' in s:
    if '18' in s:
        s = s.replace ('18', '2', 1)
    if '288' in s:
        s = s.replace ('288', '3',1)
    else:
        s = s.replace ('3888', '1', 1)

print(s)
----------
№ 12 / 3 вариант
--------------
s = '1' * 2025
while '1111' in s or '5555' in s:
    if '1111' in s:
        s = s.replace ('1111', '55')
    else:
        s = s.replace ('5555', '5')
print(s)
----------
